[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

#adding a library to our project; Cargo default behavior is to look for src/main.rs and call binary package package.field, which is currently 'Zero2Prod'
#program logic lives in lib.rs; binary will be an entrypoint within main function of main.rs
##cargo run still runs application currently in main.rs
[lib]
path = "src/lib.rs"

#We can only have one library in a project, but we can have multiple binaries!
[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
axum = "0.6.20"
serde = {version = "1.0.188", features = ["derive"]}
tokio = {version = "1.32.0", features = ["macros", "rt-multi-thread"]}
hyper = {version = "0.14.27", features = ["full"]}
config = "0.13.3"
uuid = {version = "1" , features = ["v4"]}
chrono = {version = "0.4.22" , default-features = false, features = ["clock"]}
tower-http = {version = "0.4.4" , features = ["full"]}
log = { version = "0.4.20"}
env_logger = {version="0.10.1"}
tracing ={ version = "0.1", features = ["log"]}
tracing-subscriber = {version = "0.3", features = ["registry", "env-filter"]}
tracing-bunyan-formatter = "0.3"
tracing-log = "0.2.0"
secrecy ={ version = "0.8", features = ["serde"]}

[dependencies.sqlx]
version = "0.7.2"
default-features = false 
features = [
    "runtime-tokio-rustls",
    "macros",
    "postgres",
    "uuid",
    "chrono",
    "migrate",
    #According to sqlx docs, 'offline' mode is not enabled by default and does not require a feature flag
]

# Dev dependencies are used exclusively when running tests or examples
# They do not get included in the final application binary
[dev-dependencies]
reqwest = "0.11.22"
once_cell = "1.18.0"